import { useContext, useState } from 'react';
import { CharacterContext } from "../context/CharacterContext";

/**
 * AddTask() opretter en ny opgave 
 * @param tasks indeholder en liste over alle opgaver der er tilf√∏jet
 * @param setTask er en funktion der opdaterer task hver gang en opgave tilf√∏jes eller slettes 
 * @param selectedTask gemmer teksten fra inputfeltet
 * @param setSelectedTask opdaterer selectedTask n√•r den √¶ndres
 * @param selectedCategory gemmer den kategori brugeren har valgt
 * @param setSelectedCategory opdaterer selectedCategori n√•r den √¶ndres
 * @param selectedPoints gemmer points brugeren har valgt
 * @param setSelectedPoints opdaterer selectedPoints n√•r den √¶ndres
 * @param categories er en liste over de v√¶rdier brugeren kan v√¶lge imellem af kategorier
 * @param points er en liste over de v√¶rdier brugeren kan v√¶lge imellem af points
 * 
 * @returns 
 */


function AddTask() {
  const { tasks, setTasks } = useContext(CharacterContext);
  const [selectedTask, setSelectedTask] = useState(''); // Opgavens navn
  const [selectedCategory, setSelectedCategory] = useState(null); // Valgte kategori
  const [selectedPoints, setSelectedPoints] = useState(null); // Valgte points

  const categories = [
    { id: 1, label: 'üìö', value: 'Study' },
    { id: 2, label: 'üçΩÔ∏è', value: 'Kitchen' },
    { id: 3, label: 'üßº', value: 'Wash' },
    { id: 4, label: 'üëï', value: 'Clothes' },
    { id: 5, label: 'üõãÔ∏è', value: 'Livingroom' },
    { id: 6, label: 'üõèÔ∏è', value: 'Bedroom' },
    { id: 7, label: 'üõçÔ∏è', value: 'Shop' },
  ];

  const points = [
    { id: 1, label: '5 point', value: 5 },
    { id: 2, label: '10 point', value: 10 },
    { id: 3, label: '15 point', value: 15 },
    { id: 4, label: '20 point', value: 20 },
    { id: 5, label: '25 point', value: 25 },
  ];

  // H√•ndter input√¶ndringer
  const handleTaskChange = (e) => {
    setSelectedTask(e.target.value);
  };

  // H√•ndter valg af kategori
  const handleCategoryClick = (category) => {
    setSelectedCategory(category);
  };

  // H√•ndter valg af points
  const handlePointsClick = (point) => {
    setSelectedPoints(point);
  };

  // Tilf√∏j opgaven til listen
  const handleAddTask = (e) => {
    e.preventDefault();

    if (!selectedTask || !selectedCategory || !selectedPoints) {
      alert('Udfyld venligst alle felter f√∏r du tilf√∏jer en opgave.');
      return;
    }

    const newTask = {
      id: tasks.length + 1,
      name: selectedTask,
      category: selectedCategory.label,
      points: selectedPoints.value,
    };

    setTasks([...tasks, newTask]); // Tilf√∏j ny opgave til listen
    setSelectedTask(''); // Nulstil opgavefelt
    setSelectedCategory(null); // Nulstil kategori
    setSelectedPoints(null); // Nulstil points
  };

  return (
    <div className="center">
      <h1>Opret opgave</h1>

      <form>
        <h2>üìå Kategori</h2>
        <div className="character-selection">
          {categories.map((category) => (
            <div
              key={category.id}
              className={`category ${
                selectedCategory && selectedCategory.label === category.label ? 'selected' : ''
              }`}
              onClick={() => handleCategoryClick(category)}
            >
              {category.label}
            </div>
          ))}
        </div>

        <h2>Opgaven</h2>
        <input
          type="text"
          value={selectedTask}
          placeholder="Skriv opgaven"
          onChange={handleTaskChange}
        />

        <h2>‚ö°Ô∏è Points</h2>
        <div className="character-selection">
          {points.map((point) => (
            <div
              key={point.id}
              className={`points ${
                selectedPoints && selectedPoints.value === point.value ? 'selected' : ''
              }`}

              onClick={() => handlePointsClick(point)}
            >
              {point.value}
            </div>
          ))}
        </div>

        <button
          className={`button ${
            !selectedTask || !selectedCategory || !selectedPoints ? 'disabled' : ''
          }`}
          onClick={handleAddTask}
        >
          Tilf√∏j opgave
        </button>
      </form>
    </div>
  );
}

export default AddTask;
